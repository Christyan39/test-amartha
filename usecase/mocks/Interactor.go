// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import http "net/http"
import httprouter "github.com/julienschmidt/httprouter"
import mock "github.com/stretchr/testify/mock"
import router "test/amartha/router"

// Interactor is an autogenerated mock type for the Interactor type
type Interactor struct {
	mock.Mock
}

// GetShorten provides a mock function with given fields: w, r, ps
func (_m *Interactor) GetShorten(w http.ResponseWriter, r *http.Request, ps httprouter.Params) router.Response {
	ret := _m.Called(w, r, ps)

	var r0 router.Response
	if rf, ok := ret.Get(0).(func(http.ResponseWriter, *http.Request, httprouter.Params) router.Response); ok {
		r0 = rf(w, r, ps)
	} else {
		r0 = ret.Get(0).(router.Response)
	}

	return r0
}

// GetURL provides a mock function with given fields: w, r, ps
func (_m *Interactor) GetURL(w http.ResponseWriter, r *http.Request, ps httprouter.Params) router.Response {
	ret := _m.Called(w, r, ps)

	var r0 router.Response
	if rf, ok := ret.Get(0).(func(http.ResponseWriter, *http.Request, httprouter.Params) router.Response); ok {
		r0 = rf(w, r, ps)
	} else {
		r0 = ret.Get(0).(router.Response)
	}

	return r0
}

// GetURLStats provides a mock function with given fields: w, r, ps
func (_m *Interactor) GetURLStats(w http.ResponseWriter, r *http.Request, ps httprouter.Params) router.Response {
	ret := _m.Called(w, r, ps)

	var r0 router.Response
	if rf, ok := ret.Get(0).(func(http.ResponseWriter, *http.Request, httprouter.Params) router.Response); ok {
		r0 = rf(w, r, ps)
	} else {
		r0 = ret.Get(0).(router.Response)
	}

	return r0
}
